/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/led/led.h>

#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4
// #define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer


&spi1 { 
	compatible = "nordic,nrf-spim";
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <37>; /* arbitrary; change at will */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

&mt {
    tapping-term-ms = <500>;
    retro-tap;
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

    &caps_word {
        continue-list = <UNDERSCORE MINUS SPACE BACKSPACE>;
    };

/ {

    combos {
        compatible = "zmk,combos";


         // after https://github.com/bcat/zmk-config/commit/0f0b57ff233a56345426d3139d3d26906ecd7f18
    combo_unlock {
           timeout-ms = <2000>;
           key-positions = <0 11 24 35>;
           bindings = <&tog 4>;
         };
	 
	combo_ques {
           timeout-ms = <200>;
           key-positions = <33 34>;
	   layers = <0>;
           bindings = <&kp QMARK>;
         };

	combo_capz {
           timeout-ms = <200>;
           key-positions = <25 26>;
	   layers = <0>;
           bindings = <&kp LS(Z)>;
         };
	 	 
	combo_btclear {
           timeout-ms = <300>;
           key-positions = <21 22>;
           layers = <3>;
           bindings = <&bt BT_CLR>;
         };

	combo_outtog {
           timeout-ms = <300>;
           key-positions = <33 34>;
           layers = <3>;
           bindings = <&out OUT_TOG>;
         };
         
        combo_tog3 {
           timeout-ms = <300>;
           key-positions = <39 40 41>;
	   layers = <0 1 2>;
           bindings = <&tog 3>;
         };

	combo_togReset {
           timeout-ms = <300>;
           key-positions = <39 40 41>;
	   layers = <3>; 
           bindings = <&to 0>;
         };
         
	combo_lpar {
           timeout-ms = <100>;
           key-positions = <4 5>;
           bindings = <&kp LPAR>;
         };
		
	combo_rpar {
           timeout-ms = <100>;
           key-positions = <6 7>;
           bindings = <&kp RPAR>;
         };
		
	combo_lbkt {
           timeout-ms = <100>;
           key-positions = <16 17>;
           bindings = <&kp LBKT>;
         };
		
	combo_rbkt {
           timeout-ms = <100>;
           key-positions = <18 19>;
           bindings = <&kp RBKT>;
         };
		
	combo_lbrc {
           timeout-ms = <100>;
           key-positions = <28 29>;
           bindings = <&kp LBRC>;
         };
		
	combo_rbrc {
           timeout-ms = <100>;
           key-positions = <30 31>;
           bindings = <&kp RBRC>;
         };

	combo_hyper {
           timeout-ms = <50>;
           key-positions = <19 20>;
           bindings = <&sk LG(LS(LA(LCTRL)))>;
         };

	combo_bkspc {
           timeout-ms = <50>;
           key-positions = <9 10>;
           bindings = <&kp BACKSPACE>;
         };

	combo_colon {
	   timeout-ms = <50>;
	   key-positions = <10 22>;
	   bindings = <&kp COLON>;
	 };

	combo_semi {
	   timeout-ms = <50>;
	   key-positions = <21 22>;
	   bindings = <&kp SEMI>;
	 };

     };
     
     behaviors {

	hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <500>;
            bindings = <&kp CAPS>, <&caps_word>;
        };

	bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

	ht_tp: holdtap_tappreferred {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
	
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R       |    T     |   |  Y  |  U   |  I  |  O  |  P  | BKSP      |
// | CAPS |  A  |  S  |  D  |  F       |    G     |   |  H  |  J   |  K  |  L  |  ;  |  '        |
// | SHFT |  Z  |  X  |  C  |  V       |    B     |   |  N  |  M   |  ,  |  .  |  /  | SHFT/CAPW |
//                    | ALT (ESC) | CMD (ALT) | CTL(ENT) |   | SPC | FN2  | FN1 |
                        bindings = <
   &none   &kp Q    		&kp W    	&kp E       	&kp R      	&kp T          		&kp Y   	&kp U    		&kp I       	&kp O    	&kp P     	   	&none
   &none   &kp A    		&kp S    	&kp D       	&hm LGUI F      &kp G          		&kp H   	&kp J    		&kp K       	&kp L    	&kp SQT  	   	&none
   &none   &ht_tp LSHIFT Z    	&kp X    	&kp C       	&kp V      	&kp B          		&kp N   	&kp M    		&kp COMMA   	&kp DOT  	&ht_tp RSHFT FSLH  	&none
                                		&mt LALT ESC    &mt LGUI TAB  	&mt LCTRL RET  		&lt 2 SPACE	&mo 1			&kp CAPS 
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// |   TAB |  1  |  2  |  3  |  4  |    5     |   |  6  |  7  |  8   |   9  |   0   | BKSP      |
// | EJECT |  4  |  5  |  6  |  `  |    -     |   |     |     |      |  UP  |   \   |   `       |
// |  SHFT |  7  |  8  |  9  |  0  |    =     |   |     |     | LEFT | DOWN | RIGHT | SHFT/CAPW |
//                     | ALT | CMD | CTL(ENT) |   | SPC | FN3 |  FN1 |
                        bindings = <
   &none   &kp EXCL		&kp AT   	&kp LA(N3)     	&kp EQUAL      	&kp GRAVE  	&kp LG(LS(NUMBER_3))	&kp C_RW        	&kp C_PP        &kp C_FF	&bspc_del   		&none    
   &none   &kp DLLR		&kp PRCNT  	&kp CARET   	&kp MINUS	&kp PIPE  	&none			&sk LG(LS(LA(LCTRL)))	&kp UP		&kp COLON	&kp SEMI		&none       
   &none   &ht_tp LSHIFT AMPS	&kp STAR  	&kp LBKT	&kp RBKT	&kp TILDE	&none		  	&kp LEFT    		&kp DOWN	&kp RIGHT	&ht_tp RSHFT BSLH	&none
                                		&trans  	&trans		&trans		&trans   	  	&trans   		&kp C_EJECT
                        >;
                };

		num_layer {
// -----------------------------------------------------------------------------------------
// |    |  1  |  2  |  3  |  4  |    5     |   |  6  |  7  |  8   |   9  |   0   | BKSP      |
// |    |  4  |  5  |  6  |  `  |    -     |   |     |     |      |  UP  |   \   |   `       |
// |    |  7  |  8  |  9  |  0  |    =     |   |     |     | LEFT | DOWN | RIGHT | SHFT/CAPW |
//                     | ALT | CMD | CTL(ENT) |   | SPC | FN3 |  FN1 |
                        bindings = <
   &none	&kp N1  	&kp N2  	&kp N3    	&kp EQUAL	&kp GRAVE    	&sk LG(LS(LA(LCTRL)))	&kp HOME		&kp END   	&kp DEL		&bspc_del   		&none    
   &none	&kp N4  	&kp N5		&kp N6  	&kp MINUS      	&kp PIPE  	&kp C_VOL_UP		&kp C_BRI_UP		&kp PG_UP  	&kp COLON	&kp SEMI		&none       
   &none	&kp N7 		&kp N8		&kp N9		&kp N0  	&kp LA(N3)	&kp C_VOL_DN		&kp C_BRI_DN  		&kp PG_DN  	&kp DOT		&kp RSHFT		&none
                                		&trans  	&trans		&trans		&trans   		&trans  		&caps_word
                        >;
                };
		
		board_layer {
// -----------------------------------------------------------------------------------------
// | ESC     | PRVS  | RWND  | PLAY  	| MFFD    | NEXT    |   | BT1     | BT2   | BT3   | BT4   | BT5   | BT_CLR  |
// | RGB_TOG | BRI + | HUE + | SAT + 	| EFF +   | VOL+    |   |         |       |       |       |       | OUT_TOG |
// |         | BRI - | HUE - | SAT - 	| EFF -   | VOL-    |   |   	  |       |       |       |       |         |
//                           | PWR_OFF  | PWR_OFF | PWR_TOG	| 	| 		  |       |       |
                        bindings = <
   &none   &kp C_PREV       &kp C_RW         &kp C_PP          &kp C_FF		&kp C_NEXT		&bt BT0 	&bt BT1			&bt BT2 	&bt BT3		&bt BT4			&none
   &none   &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI   &rgb_ug RGB_EFF	&kp C_VOL_UP		&kp F1 		&kp F2   		&kp F3		&kp F4		&kp F5			&none	 
   &none   &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD   &rgb_ug RGB_EFR	&kp C_VOL_DN		&kp F6		&kp F7   		&kp F8  	&kp F9		&kp F10			&none	 
                                          &ext_power EP_OFF &ext_power EP_ON &ext_power EP_TOG  	&trans  	&trans  		&rgb_ug RGB_TOG
                        >;
                };

		travel_layer {
// -----------------------------------------------------------------------------------------
// |       |       |       |       |       |         |   |         |       |       |       |       |        |
// |       |       |       |       |       |         |   |         |       |       |       |       |        |
// |       |       |       |       |       |         |   |         |       |       |       |       |        |
//                         |       |       | SUSPEND |   | SUSPEND |       |       |
                        bindings = <
   &none       &none    &none    &none    &none    &none        &none      &none   &none   &none     &none     &none 
   &none       &none    &none    &none    &none    &none        &none      &none   &none   &none     &none     &none 
   &none       &none    &none    &none    &none    &none     	&none      &none   &none   &none     &none     &none 
                                 &none    &none    &suspend     &suspend   &none   &none
                        >;
                };
        };
};		
